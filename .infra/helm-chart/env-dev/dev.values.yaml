---
defaultImage: registry.olimp.dev/olimp/backend/bet-platform/service/api-gateway
defaultImagePullPolicy: Always
defaultImageTag: dev

envs:
  LOG_LEVEL: INFO
#  ZIPKIN_URI: http://zipkin.monitoring.svc.cluster.local:9411/api/v2/spans
#  JAVA_TOOL_OPTIONS: "-Dspring.profiles.active=dev"
  JAVA_OPTS: "-XX:+UseG1GC -XX:MaxRAMPercentage=75"
  SPRING_PROFILES_ACTIVE: "dev"
  REDIS_CONNECTION_TYPE: "CLUSTER"
  REDIS_CLUSTER_NODE_ADDRESSES: "redis://10.4.1.159:6379"
  REDIS_ENABLE: false

deployments:
  app:
    extraSelectorLabels:
      tier: gw-app
    containers:
    - name: app
      envSecrets:
      - secret-envs
      envConfigmaps:
      - envs
      resources:
        requests:
          memory: "512Mi"
          cpu: "100m"
        # limits:
        #   memory: "4000Mi"
        #   cpu: "4000m"
      readinessProbe: &readinessProbe
        httpGet:
          path: /actuator/health/readiness
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 15
        timeoutSeconds: 2
        periodSeconds: 3
        failureThreshold: 3
        successThreshold: 1
      livenessProbe: &livenessProbe
        httpGet:
          path: /actuator/health/liveness
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 15
        timeoutSeconds: 2
        periodSeconds: 3
        failureThreshold: 3
        successThreshold: 1

services:
  app:
    ports:
    - name: http
      protocol: TCP
      port: 8080
    - name: actuator
      protocol: TCP
      port: 8082
    extraSelectorLabels:
      tier: gw-app

ingresses:
  apigw.k8s.dev.2-dev.ru:
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      #nginx.ingress.kubernetes.io/use-regex: "true"
    certManager:
      issuerType: cluster-issuer
      issuerName: letsencrypt
    hosts:
    - paths:
      - path: /
        serviceName: app
        servicePort: http
