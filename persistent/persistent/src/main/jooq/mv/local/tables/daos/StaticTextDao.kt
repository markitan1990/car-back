/*
 * This file is generated by jOOQ.
 */
package mv.local.tables.daos


import kotlin.collections.List

import mv.local.tables.StaticText
import mv.local.tables.records.StaticTextRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.springframework.stereotype.Repository


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class StaticTextDao(configuration: Configuration?) : DAOImpl<StaticTextRecord, mv.local.tables.pojos.StaticText, Long>(StaticText.STATIC_TEXT, mv.local.tables.pojos.StaticText::class.java, configuration) {

    /**
     * Create a new StaticTextDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: mv.local.tables.pojos.StaticText): Long? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Long?, upperInclusive: Long?): List<mv.local.tables.pojos.StaticText> = fetchRange(StaticText.STATIC_TEXT.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Long): List<mv.local.tables.pojos.StaticText> = fetch(StaticText.STATIC_TEXT.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Long): mv.local.tables.pojos.StaticText? = fetchOne(StaticText.STATIC_TEXT.ID, value)

    /**
     * Fetch records that have <code>class_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfClassId(lowerInclusive: String?, upperInclusive: String?): List<mv.local.tables.pojos.StaticText> = fetchRange(StaticText.STATIC_TEXT.CLASS_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>class_id IN (values)</code>
     */
    fun fetchByClassId(vararg values: String): List<mv.local.tables.pojos.StaticText> = fetch(StaticText.STATIC_TEXT.CLASS_ID, *values)

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDescription(lowerInclusive: String?, upperInclusive: String?): List<mv.local.tables.pojos.StaticText> = fetchRange(StaticText.STATIC_TEXT.DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    fun fetchByDescription(vararg values: String): List<mv.local.tables.pojos.StaticText> = fetch(StaticText.STATIC_TEXT.DESCRIPTION, *values)
}
