/*
 * This file is generated by jOOQ.
 */
package mv.local.tables.records


import mv.local.tables.CarCards

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CarCardsRecord() : UpdatableRecordImpl<CarCardsRecord>(CarCards.CAR_CARDS), Record9<Long?, String?, Int?, Int?, Int?, String?, Double?, String?, String?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var owner: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var carMileage: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var carYear: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var cost: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var carCondition: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var carEngine: Double?
        set(value): Unit = set(6, value)
        get(): Double? = get(6) as Double?

    open var description: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var transmission: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<Long?, String?, Int?, Int?, Int?, String?, Double?, String?, String?> = super.fieldsRow() as Row9<Long?, String?, Int?, Int?, Int?, String?, Double?, String?, String?>
    override fun valuesRow(): Row9<Long?, String?, Int?, Int?, Int?, String?, Double?, String?, String?> = super.valuesRow() as Row9<Long?, String?, Int?, Int?, Int?, String?, Double?, String?, String?>
    override fun field1(): Field<Long?> = CarCards.CAR_CARDS.ID
    override fun field2(): Field<String?> = CarCards.CAR_CARDS.OWNER
    override fun field3(): Field<Int?> = CarCards.CAR_CARDS.CAR_MILEAGE
    override fun field4(): Field<Int?> = CarCards.CAR_CARDS.CAR_YEAR
    override fun field5(): Field<Int?> = CarCards.CAR_CARDS.COST
    override fun field6(): Field<String?> = CarCards.CAR_CARDS.CAR_CONDITION
    override fun field7(): Field<Double?> = CarCards.CAR_CARDS.CAR_ENGINE
    override fun field8(): Field<String?> = CarCards.CAR_CARDS.DESCRIPTION
    override fun field9(): Field<String?> = CarCards.CAR_CARDS.TRANSMISSION
    override fun component1(): Long? = id
    override fun component2(): String? = owner
    override fun component3(): Int? = carMileage
    override fun component4(): Int? = carYear
    override fun component5(): Int? = cost
    override fun component6(): String? = carCondition
    override fun component7(): Double? = carEngine
    override fun component8(): String? = description
    override fun component9(): String? = transmission
    override fun value1(): Long? = id
    override fun value2(): String? = owner
    override fun value3(): Int? = carMileage
    override fun value4(): Int? = carYear
    override fun value5(): Int? = cost
    override fun value6(): String? = carCondition
    override fun value7(): Double? = carEngine
    override fun value8(): String? = description
    override fun value9(): String? = transmission

    override fun value1(value: Long?): CarCardsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): CarCardsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Int?): CarCardsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Int?): CarCardsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): CarCardsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): CarCardsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Double?): CarCardsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): CarCardsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: String?): CarCardsRecord {
        set(8, value)
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: Int?, value4: Int?, value5: Int?, value6: String?, value7: Double?, value8: String?, value9: String?): CarCardsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised CarCardsRecord
     */
    constructor(id: Long? = null, owner: String? = null, carMileage: Int? = null, carYear: Int? = null, cost: Int? = null, carCondition: String? = null, carEngine: Double? = null, description: String? = null, transmission: String? = null): this() {
        this.id = id
        this.owner = owner
        this.carMileage = carMileage
        this.carYear = carYear
        this.cost = cost
        this.carCondition = carCondition
        this.carEngine = carEngine
        this.description = description
        this.transmission = transmission
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised CarCardsRecord
     */
    constructor(value: mv.local.tables.pojos.CarCards?): this() {
        if (value != null) {
            this.id = value.id
            this.owner = value.owner
            this.carMileage = value.carMileage
            this.carYear = value.carYear
            this.cost = value.cost
            this.carCondition = value.carCondition
            this.carEngine = value.carEngine
            this.description = value.description
            this.transmission = value.transmission
            resetChangedOnNotNull()
        }
    }
}
